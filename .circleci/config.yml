version: 2.1

workflows:
  build-and-deploy:
    jobs:
      - build_test:
          context:
            - twine  # Provides TWINE_USERNAME and TWINE_PASSWORD
            - codecov  # Provides CODECOV_TOKEN

orbs:
  python: circleci/python@2.1.1
  codecov: codecov/codecov@5

jobs:
  build_test:
    docker:
      - image: cimg/python:3.11.0
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Verify critical files
          # CORRECTED: Check for the new package structure instead of the old file.
          # This verifies that the main package directory and its entry point exist.
          command: |
            ls -l README.md setup.py bib_ami/__main__.py || exit 1
      - python/install-packages:
          pkg-manager: pip
          # Added pytest-mock for the new testing approach
          args: pytest pytest-cov twine sphinx sphinx_rtd_theme bibtexparser requests fuzzywuzzy python-Levenshtein build pytest-mock
      - run:
          name: Verify Python version
          command: python3 --version
      - run:
          name: Run tests
          # Pytest will automatically discover tests in the /tests directory
          command: pytest --cov=bib_ami --cov-report=xml
      - run:
          name: Build documentation
          command: |
            cd doc
            make html
            cd ..
      - run:
          name: Build distribution packages
          command: python3 -m build
      - run:
          name: Upload to PyPI
          # This step should only run on a specific branch, e.g., main.
          # Consider adding a filter to the job for this.
          command: python3 -m twine upload dist/* --verbose
      - store_artifacts:
          path: doc/_build/html/
          destination: doc
      - store_artifacts:
          path: coverage.xml
      - codecov/upload:
          token: CODECOV_TOKEN

